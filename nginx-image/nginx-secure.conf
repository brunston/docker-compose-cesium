events { worker_connections 1024; }
http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    
    server {
        server_name ___my.example.com___;

        # Redirect all non-SSL traffic to SSL.
        if ($ssl_protocol = "") {
          rewrite ^ https://$host$request_uri? permanent;
        }

        listen 80;
        listen 443 ssl;

        ssl on;
        ssl_certificate /etc/letsencrypt/live/___my.example.com___/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/___my.example.com___/privkey.pem;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_dhparam /etc/ssl/private/dhparams.pem;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        location /.well-known/acme-challenge {
            proxy_pass http://___LETSENCRYPT_HTTPS_IP___:___LETSENCRYPT_HTTPS_PORT___;
        }

        location /websocket {
            proxy_pass http://___APPLICATION_IP___:___APPLICATION_PORT___;
            proxy_http_version 1.1;
	        proxy_read_timeout 60s;
        }

        location / {
            proxy_pass http://___APPLICATION_IP___:___APPLICATION_PORT___;
        }
    }

}
